openapi: 3.0.0
info:
  title: netlify-ns1-service

servers:
  - url: http://localhost:5000
    description: local dev server

paths:
  /zones:
    get:
      summary: get a list of registered zones
      operationId: getZones
      responses:
        '200':
          description: A list of zones.  Empty if none exist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoneObject'

  /zones/{zone}:
    get:
      summary: get full info about a zone
      operationId: getZone
      parameters:
        - $ref: '#/components/parameters/zone'
      responses:
        "200":
          description: OK, return zone info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneObject'
        "404":
          description: Zone info not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: create a new zone
      operationId: createZone
      parameters:
        - $ref: '#/components/parameters/zone'
      requestBody:
        schema:
          $ref: '#/components/schemas/ZoneObject'
      responses:
        "201":
          description: zone created
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: delete a zone
      operationId: deleteZone
      parameters:
        - $ref: '#/components/parameters/zone'
      responses:
        "204":
          description: zone deleted


  /zones/{zone}/{domain}/{recordType}:
    get:
      operationId: getDomain
      summary: get full info about a domain record
      parameters:
        - $ref: '#/components/parameters/zone'
        - $ref: '#/components/parameters/domain'
        - $ref: '#/components/parameters/recordType'
      responses:
        "200":
          description: OK, return domain record info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Record'
        "404":
          description: Zone info not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: create a new domain record
      operationId: createDomain
      requestBody:
        schema:
          $ref: '#/components/schemas/ZoneObject'
      parameters:
        - $ref: '#/components/parameters/zone'
        - $ref: '#/components/parameters/domain'
        - $ref: '#/components/parameters/recordType'

components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
    # Schemas generated from NS1 client structs
    # Zone Types
    Meta:
      properties:
        asn:
          additionalProperties: true
          type: object
        ca_province:
          additionalProperties: true
          type: object
        connections:
          additionalProperties: true
          type: object
        country:
          additionalProperties: true
          type: object
        georegion:
          additionalProperties: true
          type: object
        high_watermark:
          additionalProperties: true
          type: object
        ip_prefixes:
          additionalProperties: true
          type: object
        latitude:
          additionalProperties: true
          type: object
        loadavg:
          additionalProperties: true
          type: object
        longitude:
          additionalProperties: true
          type: object
        low_watermark:
          additionalProperties: true
          type: object
        note:
          additionalProperties: true
          type: object
        priority:
          additionalProperties: true
          type: object
        pulsar:
          additionalProperties: true
          type: object
        requests:
          additionalProperties: true
          type: object
        up:
          additionalProperties: true
          type: object
        us_state:
          additionalProperties: true
          type: object
        weight:
          additionalProperties: true
          type: object
      additionalProperties: false
      type: object
    TSIG:
      properties:
        enabled:
          type: boolean
        hash:
          type: string
        key:
          type: string
        name:
          type: string
      additionalProperties: false
      type: object
    ZoneObject:
      properties:
        dns_servers:
          items:
            type: string
          type: array
        dnssec:
          type: boolean
        expiry:
          type: integer
        hostmaster:
          type: string
        id:
          type: string
        link:
          type: string
        meta:
          "$schema": http://json-schema.org/draft-04/schema#
          "$ref": "#/components/schemas/Meta"
        network_pools:
          items:
            type: string
          type: array
        networks:
          items:
            type: integer
          type: array
        nx_ttl:
          type: integer
        pool:
          type: string
        primary:
          "$schema": http://json-schema.org/draft-04/schema#
          "$ref": "#/components/schemas/ZonePrimary"
        records:
          items:
            "$schema": http://json-schema.org/draft-04/schema#
            "$ref": "#/components/schemas/ZoneRecord"
          type: array
        refresh:
          type: integer
        retry:
          type: integer
        secondary:
          "$schema": http://json-schema.org/draft-04/schema#
          "$ref": "#/components/schemas/ZoneSecondary"
        serial:
          type: integer
        ttl:
          type: integer
        zone:
          type: string
      additionalProperties: false
      type: object
    ZonePrimary:
      required:
      - enabled
      - secondaries
      properties:
        enabled:
          type: boolean
        secondaries:
          items:
            "$schema": http://json-schema.org/draft-04/schema#
            "$ref": "#/components/schemas/ZoneSecondaryServer"
          type: array
      additionalProperties: false
      type: object
    ZoneRecord:
      properties:
        Domain:
          type: string
        id:
          type: string
        link:
          type: string
        short_answers:
          items:
            type: string
          type: array
        tier:
          type: string
        ttl:
          type: integer
        type:
          type: string
      additionalProperties: false
      type: object
    ZoneSecondary:
      required:
      - error
      - enabled
      properties:
        enabled:
          type: boolean
        error:
          type: string
        expired:
          type: boolean
        last_xfr:
          type: integer
        other_ips:
          items:
            type: string
          type: array
        other_ports:
          items:
            type: integer
          type: array
        primary_ip:
          type: string
        primary_port:
          type: integer
        status:
          type: string
        tsig:
          "$schema": http://json-schema.org/draft-04/schema#
          "$ref": "#/components/schemas/TSIG"
      additionalProperties: false
      type: object
    ZoneSecondaryServer:
      required:
      - ip
      - notify
      properties:
        ip:
          type: string
        networks:
          items:
            type: integer
          type: array
        notify:
          type: boolean
        port:
          type: integer
      additionalProperties: false
      type: object

    # Record types
    Answer:
      required:
      - answer
      properties:
        answer:
          items:
            type: string
          type: array
        id:
          type: string
        meta:
          "$ref": "#/components/schemas/Meta"
        region:
          type: string
      additionalProperties: false
      type: object
    Filter:
      required:
      - filter
      - config
      properties:
        config:
          # patternProperties:
          #   ".*":
          #     additionalProperties: true
          #     type: object
          type: object
        disabled:
          type: boolean
        filter:
          type: string
      additionalProperties: false
      type: object
    Meta:
      properties:
        asn:
          additionalProperties: true
          type: object
        ca_province:
          additionalProperties: true
          type: object
        connections:
          additionalProperties: true
          type: object
        country:
          additionalProperties: true
          type: object
        georegion:
          additionalProperties: true
          type: object
        high_watermark:
          additionalProperties: true
          type: object
        ip_prefixes:
          additionalProperties: true
          type: object
        latitude:
          additionalProperties: true
          type: object
        loadavg:
          additionalProperties: true
          type: object
        longitude:
          additionalProperties: true
          type: object
        low_watermark:
          additionalProperties: true
          type: object
        note:
          additionalProperties: true
          type: object
        priority:
          additionalProperties: true
          type: object
        pulsar:
          additionalProperties: true
          type: object
        requests:
          additionalProperties: true
          type: object
        up:
          additionalProperties: true
          type: object
        us_state:
          additionalProperties: true
          type: object
        weight:
          additionalProperties: true
          type: object
      additionalProperties: false
      type: object
    Record:
      required:
      - zone
      - domain
      - type
      - answers
      - filters
      properties:
        answers:
          items:
            "$schema": http://json-schema.org/draft-04/schema#
            "$ref": "#/components/schemas/Answer"
          type: array
        domain:
          type: string
        filters:
          items:
            "$schema": http://json-schema.org/draft-04/schema#
            "$ref": "#/components/schemas/Filter"
          type: array
        id:
          type: string
        link:
          type: string
        meta:
          "$schema": http://json-schema.org/draft-04/schema#
          "$ref": "#/components/schemas/Meta"
        regions:
          # patternProperties:
          #   ".*":
          #     "$schema": http://json-schema.org/draft-04/schema#
          #     "$ref": "#/components/schemas/Region"
          type: object
        ttl:
          type: integer
        type:
          type: string
        use_client_subnet:
          type: boolean
        zone:
          type: string
      additionalProperties: false
      type: object
    Region:
      properties:
        meta:
          "$ref": "#/components/schemas/Meta"
      additionalProperties: false
      type: object


  parameters:
    zone:
      name: zone
      in: path
      required: true
      schema:
        type: string
    domain:
      name: domain
      in: path
      required: true
      schema:
        type: string
    recordType:
      name: recordType
      in: path
      required: true
      schema:
        type: string
