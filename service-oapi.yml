openapi: 3.0.0
info:
  title: netlify-ns1-service

servers:
  - url: http://localhost:5000
    description: local dev server

paths:
  /zones:
    get:
      summary: get a list of registered zones
      operationId: getZones
      responses:
        '200':
          description: A list of zones.  Empty if none exist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoneObject'

  /zones/{zone}:
    get:
      summary: get full info about a zone
      operationId: getZone
      parameters:
        - $ref: '#/components/parameters/zone'
      responses:
        "200":
          description: OK, return zone info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneObject'
        "404":
          description: Zone info not found
          content:
            application/json:
              schema:
                type: object
    put:
      summary: create a new zone
      operationId: createZone
      parameters:
        - $ref: '#/components/parameters/zone'
      requestBody:
        schema:
          $ref: '#/components/schemas/ZoneObject'
      responses:
        "201":
          description: zone created
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: delete a zone
      operationId: deleteZone
      parameters:
        - $ref: '#/components/parameters/zone'
      responses:
        "201":
          description: zone deleted


  /zones/{zone}/{domain}/{recordType}:
    get:
      operationId: getDomain
      summary: get full info about a domain record
      parameters:
        - $ref: '#/components/parameters/zone'
        - $ref: '#/components/parameters/domain'
        - $ref: '#/components/parameters/recordType'
    put:
      summary: create a new domain record
      operationId: createDomain
      parameters:
        - $ref: '#/components/parameters/zone'
        - $ref: '#/components/parameters/domain'
        - $ref: '#/components/parameters/recordType'

components:
  schemas:
    ZoneObject:
      type: object
      required: ['zone']
      properties:
        id:
          type: string
        ttl:
          type: integer
          default: 3600
        mx_ttl:
          type: integer
        retry:
          type: integer
        zone:
          type: string
        refresh:
          type: integer
        dns_servers:
          type: array
          items:
            type: string
        meta:
          type: object
        hostmaster:
          type: string

    DomainObject:
      type: object
      properties:
        id:
          type: string
        tier:
          type: integer
        domain:
          type: string
        zone:
          type: string
        meta:
          type: object
        ttl:
          type: integer
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AnswerObject'

    AnswerObject:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: ["NS", "A", "AAA", "CNAME"]
        feeds:
          type: object
          properties:
            source:
              type: string
            feed:
              type: string
        answer:
          type: array
          items:
            type: string
        meta:
          type: object
        region:
          type: string

  parameters:
    zone:
      name: zone
      in: path
      required: true
      schema:
        type: string
    domain:
      name: domain
      in: path
      required: true
      schema:
        type: string
    recordType:
      name: recordType
      in: path
      required: true
      schema:
        type: string
